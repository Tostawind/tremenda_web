---
const clientList = [
    {
        image: 'https://images.unsplash.com/photo-1695653422287-81cfeeb96ade?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2072&q=80',
        alt: 'Gym',
        title: 'Gimnasio',
        tags: [
            {
                text: 'Sport',
                color: 'bg-accent'
            },
            {
                text: 'Emprendimiento',
                color: 'bg-orange-400'
            },
        ]
    },
    {
        image: 'https://images.unsplash.com/photo-1682686581580-d99b0230064e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80',
        alt: 'Gym',
        title: 'Obrador',
        tags: [
            {
                text: 'Comida',
                color: 'bg-green-400',
            },
            {
                text: 'Emprendimiento',
                color: 'bg-orange-400'
            },
        ]
    },
    {
        image: 'https://images.unsplash.com/photo-1695575161610-7aeb03933996?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2072&q=80',
        alt: 'Gym',
        title: 'Restaurante',
        tags: [
            {
                text: 'Comida',
                color: 'bg-green-400'
            },
            {
                text: 'Emprendimiento',
                color: 'bg-orange-400'
            },
        ]
    },
    {
        image: 'https://images.unsplash.com/photo-1682688759350-050208b1211c?ixlib=rb-4.0.3&ixid=M3wxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80',
        alt: 'Gym',
        title: 'Gimnasio fuerte',
        tags: [
            {
                text: 'Sport',
                color: 'bg-accent'
            },
            {
                text: 'Emprendimiento',
                color: 'bg-orange-400'
            },
        ]
    },
    {
        image: 'https://images.unsplash.com/photo-1695805868055-636315fcd124?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1932&q=80',
        alt: 'Gym',
        title: 'Titulo largo largo largo largo muy largo.',
        tags: [
            {
                text: 'Sport',
                color: 'bg-accent'
            },
            {
                text: 'Emprendimiento',
                color: 'bg-orange-400'
            },
        ]
    },
];
---

<div id="image-track" data-mouse-down-at="0" data-prev-percentage="0" class="hover:cursor-grab active:cursor-grabbing">
    {
        clientList.map((client) => (
            <div class="image-container | cursor-pointer">
                <img class="image" src={client.image} alt={client.alt} draggable="false" />
                <div class="image-text">
                    <h2 class="text-3xl font-bold flex justify-between items-center truncate" title={client.title}>
                        {client.title} 
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M6 10l6 6l6 -6h-12"></path>
                        </svg>
                    </h2>
                    <!-- TAGS -->
                    <div class="flex gap-4 flex-wrap py-4">
                        {
                            client.tags.map((tag) => (
                                <div class:list={tag.color} class="py-1 px-4 rounded-full text-sm font-bold">{tag.text}</div>
                            ))
                        }
                    </div>
                </div>
            </div>
        ))
    }
</div>

<style>
    #image-track {
        display: flex;
        width: max-content; /* a√±adido por mi */
        gap: 4vmin;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(0%, -50%); 
        user-select: none; /* -- Prevent image highlighting -- */
    }
    
    #image-track .image-container  {
        position: relative;
        overflow: hidden;
    }

    .image-container .image {
        width: 40vmin;
        height: 56vmin;
        object-fit: cover;
        object-position: 100% center;
    }
    #image-track .image {
        width: 40vmin;
        height: 56vmin;
        object-fit: cover;
        object-position: 100% center;
    }

    .image-container .image-text {
        position: absolute;
        top: 80%;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: rgba(0,0,0,0.7);
        color: white;
        display: grid;
        place-content: start center;
        padding: 1em;
        transition: all 800ms ease;
    }

    .image-container .image-text:hover {
        top: 0;
        place-content: center;
    }

    .image-container .image-text:hover svg {
        display: none;
    }
</style>

<script>
    const track = document.getElementById("image-track");
    // TODO: Ejecutar cuando es mobil y cuando desktop
    /*========================================================================*/
    // DESKTOP
    window.onmousedown = e => {
        track.dataset.mouseDownAt = e.clientX;
    }

    window.onmouseup = () => {
        track!.dataset.mouseDownAt = "0";
        track!.dataset.prevPercentage = track!.dataset.percentage;
    }

    window.onmousemove = e => {
        if(track!.dataset.mouseDownAt === "0") return;
        
        const mouseDelta = parseFloat(track.dataset.mouseDownAt) - e.clientX;
        const maxDelta = window.innerWidth / 2;
        
        const percentage = (mouseDelta / maxDelta) * -100;
        
        const nextPercentageUnconstrained = parseFloat(track.dataset.prevPercentage) + percentage;
        const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), - 100);
        
        track!.dataset.percentage = nextPercentage.toString();
        
        track!.animate({
            transform: `translate(${nextPercentage}%, -50%)`
        }, { duration: 1200, fill: "forwards" })
        
        for(const image of track!.getElementsByClassName("image")) {
            image.animate({
            objectPosition: `${100 + nextPercentage}% center`
            }, { duration: 1200, fill: "forwards" });
        }
    }
    /*========================================================================*/
    // MOBIL
    window.ontouchstart = e => {
        track!.dataset.mouseDownAt = e.targetTouches[0].clientX.toString();
    }

    window.ontouchend = () => {
        track!.dataset.mouseDownAt = "0";
        track!.dataset.prevPercentage = track!.dataset.percentage;
    }

    window.ontouchmove = e => {
        console.log('phone move')
        if(track!.dataset.mouseDownAt === "0") return;
        
        const mouseDelta = parseFloat(track.dataset.mouseDownAt) - e.targetTouches[0].clientX;
        const maxDelta = window.innerWidth / 2;
        
        const percentage = (mouseDelta / maxDelta) * -100;
        
        const nextPercentageUnconstrained = parseFloat(track.dataset.prevPercentage) + percentage;
        const nextPercentage = Math.max(Math.min(nextPercentageUnconstrained, 0), - 100);
        
        track!.dataset.percentage = nextPercentage.toString();
        
        track!.animate({
            transform: `translate(${nextPercentage}%, -50%)`
        }, { duration: 1200, fill: "forwards" })
        
        for(const image of track!.getElementsByClassName("image")) {
            image.animate({
            objectPosition: `${100 + nextPercentage}% center`
            }, { duration: 1200, fill: "forwards" });
        }
    }
</script>